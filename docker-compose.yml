services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${DOCKER_COMPOSE_NAME:-myapp}_test:1.0
    container_name: ${DOCKER_COMPOSE_NAME:-myapp}_test
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      PORT: ${PORT:-5000}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MYSQL_URL: ${MYSQL_URL}
    command: >
      sh -c "
        npm run prisma:deploy
        npm run prisma:generate
        npm run start:prod
      "
    restart: no
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - backend
  redis:
    image: redis:7.2
    container_name: ${DOCKER_COMPOSE_NAME:-myapp}_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: > 
      redis-server 
      --appendonly yes 
      --protected-mode yes 
      --requirepass "${REDIS_PASSWORD}" 
      --bind 0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - backend
volumes:
  redis_data:

networks:
  backend:
    driver: bridge